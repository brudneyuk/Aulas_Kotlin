import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate

class Repositorio {

    lateinit var jdbcTemplate: JdbcTemplate

    fun iniciar() {
        jdbcTemplate = Conexao().conectar()
    }

    fun criarTabela() {
        jdbcTemplate.execute(
            """
            create table if not exists musica (
            id int GENERATED BY DEFAULT AS IDENTITY primary key,
            titulo varchar(45),
            artista varchar(45),
            dataCriacao DATE
        )
        """
        )
    }

    fun cadastrar(novoLivro: Musica){
        jdbcTemplate.update(
            """
                INSERT INTO musica (titulo, artista, dataCriacao) values ('${novoLivro.titulo}', '${novoLivro.artista}', '${novoLivro.dataCriacao}') 
            """
        )
    }

    fun getUltimoCodigo():Int {
        /*
        queryForObject -> usamos quando a consulta retorna
        1 e somente 1 linha!
        Int::class.java -> indica que o resultado serÃ¡ convertido
        num objeto do tipo Int
        ::class.java -> Sempre que mencionamos uma classe, fazemos assim
         */
        val ultimoId = jdbcTemplate.queryForObject("""
        select max(id) from musica    
        """, Int::class.java
        )

        return ultimoId
    }

    fun buscar(id: Int): Musica?{
        return jdbcTemplate.queryForObject(
            """
               SELECT * FROM musica WHERE id = ${id}  
            """, BeanPropertyRowMapper(Musica::class.java)
        )
    }
//        Me esqueci da syntax para excluir um dado de uma tabela

//    fun excluir(id: Int):Boolean {
//        val atualizados = jdbcTemplate.update("""
//       truncate table musica [*]where id = $id
//       """)

//        return atualizados == 1
//    }
}